{"version":3,"sources":["/Users/supornosarkar/Hackathons/mode-ai-agent-hackathon/goat/typescript/packages/plugins/kim/dist/chunk-BNDEZSYU.js","../src/parameters.ts"],"names":["GetSwapRouterAddressParams","createToolParameters","z","object","pathSchema","tokenIn","string","describe","tokenOut","intermediateTokens","array","fees","number","ExactInputParams","path","recipient","deadline","amountIn","amountOutMinimum","ExactOutputParams","any","amountOut","amountInMaximum","ExactInputSingleParams","optional","default","limitSqrtPrice","ExactOutputSingleParams","DefaultConfigurationForPoolParams","poolAddress","PoolByPairParams","token0","token1","MintParams","tickLower","tickUpper","amount0Desired","amount1Desired","amount0Min","amount1Min","IncreaseLiquidityParams","tokenId","DecreaseLiquidityParams","liquidity","CollectParams","amount0Max","amount1Max","BurnParams","GlobalStateResponseParams","price","tick","lastFee","pluginCongig","communityFee","unlocked","boolean"],"mappings":"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","file":"/Users/supornosarkar/Hackathons/mode-ai-agent-hackathon/goat/typescript/packages/plugins/kim/dist/chunk-BNDEZSYU.js","sourcesContent":[null,"import { createToolParameters } from \"@goat-sdk/core\";\nimport { z } from \"zod\";\n\nexport class GetSwapRouterAddressParams extends createToolParameters(z.object({})) {}\n\nexport const pathSchema = z.object({\n    tokenIn: z.string().describe(\"Address of the first token in the path\"),\n    tokenOut: z.string().describe(\"Address of the last token in the path\"),\n    intermediateTokens: z.array(z.string()).describe(\"Addresses of the intermediate tokens in the path\"),\n    fees: z.array(z.number()).describe(\"Fee tiers between each hop\"),\n});\n\nexport class ExactInputParams extends createToolParameters(\n    z.object({\n        path: pathSchema.describe(\"The path of the swap\"),\n        recipient: z.string().describe(\"Address to receive the output tokens\"),\n        deadline: z.number().describe(\"The deadline for the swap\"),\n        amountIn: z.string().describe(\"The amount of tokens to swap in\"),\n        amountOutMinimum: z.string().describe(\"The minimum amount of tokens to receive\"),\n    }),\n) {}\n\nexport class ExactOutputParams extends createToolParameters(\n    z.object({\n        path: z.any().describe(\"The path of the swap\"),\n        recipient: z.string().describe(\"The address to receive the output tokens\"),\n        deadline: z.number().describe(\"The deadline for the swap\"),\n        amountOut: z.string().describe(\"The amount of tokens to swap out\"),\n        amountInMaximum: z.string().describe(\"The maximum amount of tokens to swap in\"),\n    }),\n) {}\n\nexport class ExactInputSingleParams extends createToolParameters(\n    z.object({\n        tokenIn: z.string().describe(\"The address of the token to swap in\"),\n        tokenOut: z.string().describe(\"The address of the token to swap out\"),\n        recipient: z.string().describe(\"The address to receive the output tokens\"),\n        deadline: z\n            .number()\n            .optional()\n            .default(60 * 60 * 24)\n            .describe(\"The deadline for the swap in seconds from now\"),\n        amountIn: z.string().describe(\"The amount of tokens to swap in in base units\"),\n        amountOutMinimum: z.string().describe(\"The minimum amount of tokens to receive in base units\"),\n        limitSqrtPrice: z.string().describe(\"The limit price for the swap\"),\n    }),\n) {}\n\nexport class ExactOutputSingleParams extends createToolParameters(\n    z.object({\n        tokenIn: z.string().describe(\"The token to swap in\"),\n        tokenOut: z.string().describe(\"The token to swap out\"),\n        recipient: z.string().describe(\"The address to receive the output tokens\"),\n        deadline: z.number().describe(\"The deadline for the swap\"),\n        amountOut: z.string().describe(\"The amount of tokens to swap out\"),\n        amountInMaximum: z.string().describe(\"The maximum amount of tokens to swap in\"),\n        limitSqrtPrice: z.string().describe(\"The limit price for the swap\"),\n    }),\n) {}\n\nexport class DefaultConfigurationForPoolParams extends createToolParameters(\n    z.object({\n        poolAddress: z.string().describe(\"The address of the pool\"),\n    }),\n) {}\n\nexport class PoolByPairParams extends createToolParameters(\n    z.object({\n        token0: z.string().describe(\"The first token in the pair\"),\n        token1: z.string().describe(\"The second token in the pair\"),\n    }),\n) {}\n\nexport class MintParams extends createToolParameters(\n    z.object({\n        token0: z.string().describe(\"The first token in the pair\"),\n        token1: z.string().describe(\"The second token in the pair\"),\n        tickLower: z.number().describe(\"The lower tick for the liquidity\"),\n        tickUpper: z.number().describe(\"The upper tick for the liquidity\"),\n        amount0Desired: z.string().describe(\"The amount of token0 to add\"),\n        amount1Desired: z.string().describe(\"The amount of token1 to add\"),\n        amount0Min: z.string().describe(\"The minimum amount of token0 to add\"),\n        amount1Min: z.string().describe(\"The minimum amount of token1 to add\"),\n        recipient: z.string().describe(\"The address to receive the output tokens\"),\n        deadline: z.number().describe(\"The deadline for the swap\"),\n    }),\n) {}\n\nexport class IncreaseLiquidityParams extends createToolParameters(\n    z.object({\n        token0: z.string().describe(\"The first token in the pair\"),\n        token1: z.string().describe(\"The second token in the pair\"),\n        tokenId: z.string().describe(\"The token id of the liquidity\"),\n        amount0Desired: z.string().describe(\"The amount of token0 to add\"),\n        amount1Desired: z.string().describe(\"The amount of token1 to add\"),\n        amount0Min: z.string().describe(\"The minimum amount of token0 to add\"),\n        amount1Min: z.string().describe(\"The minimum amount of token1 to add\"),\n        deadline: z.number().describe(\"The deadline for the swap\"),\n    }),\n) {}\n\nexport class DecreaseLiquidityParams extends createToolParameters(\n    z.object({\n        token0: z.string().describe(\"The first token in the pair\"),\n        token1: z.string().describe(\"The second token in the pair\"),\n        tokenId: z.string().describe(\"The token id of the liquidity\"),\n        liquidity: z.string().describe(\"The amount of liquidity to remove\"),\n        amount0Min: z.string().describe(\"The minimum amount of token0 to remove\"),\n        amount1Min: z.string().describe(\"The minimum amount of token1 to remove\"),\n        deadline: z.number().describe(\"The deadline for the swap\"),\n    }),\n) {}\n\nexport class CollectParams extends createToolParameters(\n    z.object({\n        tokenId: z.string().describe(\"The token id of the liquidity\"),\n        token0: z.string().describe(\"The first token in the pair\"),\n        token1: z.string().describe(\"The second token in the pair\"),\n        recipient: z.string().describe(\"The address to receive the output tokens\"),\n        amount0Max: z.string().describe(\"The maximum amount of token0 to collect\"),\n        amount1Max: z.string().describe(\"The maximum amount of token1 to collect\"),\n    }),\n) {}\n\nexport class BurnParams extends createToolParameters(\n    z.object({\n        tokenId: z.string().describe(\"The token id of the liquidity position to be burned\"),\n    }),\n) {}\n\nexport class GlobalStateResponseParams extends createToolParameters(\n    z.object({\n        price: z.string().describe(\"The current price of the pool\"),\n        tick: z.number().describe(\"The current tick of the pool\"),\n        lastFee: z.number().describe(\"The current (last known) fee in hundredths of a bip\"),\n        pluginCongig: z.number().describe(\"The current plugin config as bitmap\"),\n        communityFee: z\n            .number()\n            .describe(\"The community fee represented as a percent of all collected fee in thousandths\"),\n        unlocked: z.boolean().describe(\"Whether the pool is unlocked\"),\n    }),\n) {}\n"]}