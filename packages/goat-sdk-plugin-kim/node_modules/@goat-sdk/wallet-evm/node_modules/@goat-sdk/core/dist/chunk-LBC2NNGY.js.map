{"version":3,"sources":["/Users/supornosarkar/Hackathons/mode-ai-agent-hackathon/goat/typescript/packages/core/dist/chunk-LBC2NNGY.js","../src/classes/WalletClientBase.ts"],"names":["WalletClientBase","getCoreTools","createTool","name","description","parameters","z","object","getAddress","getChain","address","string","balanceOf"],"mappings":"AAAA;AACE;AACF,sDAA4B;AAC5B;AACE;AACF,sDAA4B;AAC5B;AACA;ACPA,0BAAkB;AAgBX,IAAeA,iBAAAA,EAAf,MAAeA;ADNtB,ECVA,OAgBsBA;ADLtB,IAAI,qCAAM,IAAK,EAAE,kBAAkB,CAAC;AACpC,EAAE;AACF,ECSIC,YAAAA,CAAAA,EAA2B;AACvB,IAAA,OAAO;ADRf,MCSYC,yCAAAA;ADRZ,QCUoBC,IAAAA,EAAM,aAAA;ADT1B,QCUoBC,WAAAA,EAAa,+BAAA;ADTjC,QCUoBC,UAAAA,EAAYC,MAAAA,CAAEC,MAAAA,CAAO,CAAC,CAAA;ADT1C,MCUgB,CAAA,EACA,CAAA,EAAA,GAAM,IAAA,CAAKC,UAAAA,CAAU,CAAA,CAAA;ADVrC,MCYYN,yCAAAA;ADXZ,QCaoBC,IAAAA,EAAM,WAAA;ADZ1B,QCaoBC,WAAAA,EAAa,6BAAA;ADZjC,QCaoBC,UAAAA,EAAYC,MAAAA,CAAEC,MAAAA,CAAO,CAAC,CAAA;ADZ1C,MCagB,CAAA,EACA,CAAA,EAAA,GAAM,IAAA,CAAKE,QAAAA,CAAQ,CAAA,CAAA;ADbnC,MCeYP,yCAAAA;ADdZ,QCgBoBC,IAAAA,EAAM,aAAA;ADf1B,QCgBoBC,WAAAA,EAAa,+BAAA;ADfjC,QCgBoBC,UAAAA,EAAYC,MAAAA,CAAEC,MAAAA,CAAO;ADfzC,UCe2CG,OAAAA,EAASJ,MAAAA,CAAEK,MAAAA,CAAM;ADd5D,QCc+D,CAAA;ADb/D,MCcgB,CAAA,EACA,CAACN,UAAAA,EAAAA,GAAe,IAAA,CAAKO,SAAAA,CAAUP,UAAAA,CAAWK,OAAO,CAAA;ADdjE,IAAI,CAAC;AACL,ECgBI;AACJ,CAAA;ADfA;AACA;AACE;AACF,4CAAC","file":"/Users/supornosarkar/Hackathons/mode-ai-agent-hackathon/goat/typescript/packages/core/dist/chunk-LBC2NNGY.js","sourcesContent":[null,"import { z } from \"zod\";\nimport type { Chain } from \"../types/Chain\";\nimport { type ToolBase, createTool } from \"./ToolBase\";\n\nexport type Signature = {\n    signature: string;\n};\n\nexport type Balance = {\n    decimals: number;\n    symbol: string;\n    name: string;\n    value: string;\n    inBaseUnits: string;\n};\n\nexport abstract class WalletClientBase {\n    abstract getAddress(): string;\n    abstract getChain(): Chain;\n    abstract signMessage(message: string): Promise<Signature>;\n    abstract balanceOf(address: string): Promise<Balance>;\n\n    getCoreTools(): ToolBase[] {\n        return [\n            createTool(\n                {\n                    name: \"get_address\",\n                    description: \"Get the address of the wallet\",\n                    parameters: z.object({}),\n                },\n                () => this.getAddress(),\n            ),\n            createTool(\n                {\n                    name: \"get_chain\",\n                    description: \"Get the chain of the wallet\",\n                    parameters: z.object({}),\n                },\n                () => this.getChain(),\n            ),\n            createTool(\n                {\n                    name: \"get_balance\",\n                    description: \"Get the balance of the wallet\",\n                    parameters: z.object({ address: z.string() }),\n                },\n                (parameters) => this.balanceOf(parameters.address),\n            ),\n        ];\n    }\n}\n"]}