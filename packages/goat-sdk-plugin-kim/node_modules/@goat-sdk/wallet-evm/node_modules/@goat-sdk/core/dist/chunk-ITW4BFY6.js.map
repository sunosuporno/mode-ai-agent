{"version":3,"sources":["/Users/supornosarkar/Hackathons/mode-ai-agent-hackathon/goat/typescript/packages/core/dist/chunk-ITW4BFY6.js","../src/utils/createToolParameters.ts"],"names":["createToolParameters","schema","SchemaHolder"],"mappings":"AAAA;AACE;AACF,sDAA4B;AAC5B;AACA;ACGO,SAASA,oBAAAA,CAA4CC,MAAAA,EAAS;AAEjE,EAAA,IAAMC,aAAAA,YAAN,MAAMA,aAAAA;ADFV,ICAA,OAEUA;ADDV,MAAM,qCAAM,IAAK,EAAE,cAAc,CAAC;AAClC,IAAI;AACJ,ICAQ,4BAAOD,OAAAA,EAASA,OAAAA;ADCxB,ECAI,iCAAA;AACA,EAAA,OAAOC,YAAAA;AACX;AANgBF,qCAAAA,oBAAAA,EAAAA,sBAAAA,CAAAA;ADQhB;AACA;AACE;AACF,oDAAC","file":"/Users/supornosarkar/Hackathons/mode-ai-agent-hackathon/goat/typescript/packages/core/dist/chunk-ITW4BFY6.js","sourcesContent":[null,"import type { z } from \"zod\";\n\nexport type ToolParametersStatic<T extends z.ZodSchema> = {\n    new (): z.infer<T>;\n    schema: T;\n};\n\nexport function createToolParameters<T extends z.ZodSchema>(schema: T) {\n    // biome-ignore lint/complexity/noStaticOnlyClass: this is a semi-hack to get the schema into the class\n    class SchemaHolder {\n        static schema = schema;\n    }\n    return SchemaHolder as ToolParametersStatic<T>;\n}\n"]}