{"version":3,"sources":["../src/utils/addParametersToDescription.ts"],"sourcesContent":["import type { z } from \"zod\";\n\nexport function addParametersToDescription(description: string, schema: z.ZodTypeAny): string {\n    let paramLines: string[] = [];\n\n    if (schema._def?.typeName === \"ZodObject\") {\n        const shape = schema._def.shape();\n        if (shape) {\n            paramLines = Object.entries<z.ZodTypeAny>(shape).map(([key, value]) => {\n                const isOptional = value.isOptional();\n                const paramDescription = value.description || \"\";\n                const typeStr = getTypeString(value);\n                return `- ${key}${isOptional ? \" (optional)\" : \"\"} (${typeStr}): ${paramDescription}`;\n            });\n        }\n    }\n\n    return `${description}\\n${paramLines.join(\"\\n\")}`;\n}\n\nfunction getTypeString(schema: z.ZodTypeAny): string {\n    const typeName = schema._def?.typeName;\n\n    switch (typeName) {\n        case \"ZodOptional\":\n            return getTypeString((schema as z.ZodOptional<z.ZodTypeAny>).unwrap());\n        case \"ZodString\":\n            return \"string\";\n        case \"ZodNumber\":\n            return \"number\";\n        case \"ZodBoolean\":\n            return \"boolean\";\n        case \"ZodArray\":\n            return \"array\";\n        case \"ZodObject\":\n            return \"object\";\n        default:\n            return \"unknown\";\n    }\n}\n"],"mappings":";;;;;AAEO,SAASA,2BAA2BC,aAAqBC,QAAoB;AAChF,MAAIC,aAAuB,CAAA;AAE3B,MAAID,OAAOE,MAAMC,aAAa,aAAa;AACvC,UAAMC,QAAQJ,OAAOE,KAAKE,MAAK;AAC/B,QAAIA,OAAO;AACPH,mBAAaI,OAAOC,QAAsBF,KAAAA,EAAOG,IAAI,CAAC,CAACC,KAAKC,KAAAA,MAAM;AAC9D,cAAMC,aAAaD,MAAMC,WAAU;AACnC,cAAMC,mBAAmBF,MAAMV,eAAe;AAC9C,cAAMa,UAAUC,cAAcJ,KAAAA;AAC9B,eAAO,KAAKD,GAAAA,GAAME,aAAa,gBAAgB,EAAA,KAAOE,OAAAA,MAAaD,gBAAAA;MACvE,CAAA;IACJ;EACJ;AAEA,SAAO,GAAGZ,WAAAA;EAAgBE,WAAWa,KAAK,IAAA,CAAA;AAC9C;AAhBgBhB;AAkBhB,SAASe,cAAcb,QAAoB;AACvC,QAAMG,WAAWH,OAAOE,MAAMC;AAE9B,UAAQA,UAAAA;IACJ,KAAK;AACD,aAAOU,cAAeb,OAAuCe,OAAM,CAAA;IACvE,KAAK;AACD,aAAO;IACX,KAAK;AACD,aAAO;IACX,KAAK;AACD,aAAO;IACX,KAAK;AACD,aAAO;IACX,KAAK;AACD,aAAO;IACX;AACI,aAAO;EACf;AACJ;AAnBSF;","names":["addParametersToDescription","description","schema","paramLines","_def","typeName","shape","Object","entries","map","key","value","isOptional","paramDescription","typeStr","getTypeString","join","unwrap"]}