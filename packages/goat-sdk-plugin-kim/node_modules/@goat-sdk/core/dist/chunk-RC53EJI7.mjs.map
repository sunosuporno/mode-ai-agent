{"version":3,"sources":["../src/utils/getTools.ts"],"sourcesContent":["import type { PluginBase } from \"../classes/PluginBase\";\nimport type { ToolBase } from \"../classes/ToolBase\";\nimport type { WalletClientBase } from \"../classes/WalletClientBase\";\n\nexport type GetToolsParams<TWalletClient extends WalletClientBase> = {\n    wallet: TWalletClient;\n    plugins?: (PluginBase<TWalletClient> | PluginBase<WalletClientBase>)[];\n};\nexport async function getTools<TWalletClient extends WalletClientBase>({\n    wallet,\n    plugins = [],\n}: GetToolsParams<TWalletClient>) {\n    const tools: ToolBase[] = [];\n\n    const chain = wallet.getChain();\n    const coreTools = wallet.getCoreTools();\n\n    for (const plugin of plugins) {\n        if (!plugin.supportsChain(chain)) {\n            console.warn(\n                `Plugin ${plugin.name} does not support ${chain.type}${\n                    \"id\" in chain ? ` chain id ${chain.id}` : \"\"\n                }. Skipping.`,\n            );\n        }\n        const pluginTools = await plugin.getTools(wallet);\n        tools.push(...pluginTools);\n    }\n\n    return [...coreTools, ...tools];\n}\n"],"mappings":";;;;;AAQA,eAAsBA,SAAiD,EACnEC,QACAC,UAAU,CAAA,EAAE,GACgB;AAC5B,QAAMC,QAAoB,CAAA;AAE1B,QAAMC,QAAQH,OAAOI,SAAQ;AAC7B,QAAMC,YAAYL,OAAOM,aAAY;AAErC,aAAWC,UAAUN,SAAS;AAC1B,QAAI,CAACM,OAAOC,cAAcL,KAAAA,GAAQ;AAC9BM,cAAQC,KACJ,UAAUH,OAAOI,IAAI,qBAAqBR,MAAMS,IAAI,GAChD,QAAQT,QAAQ,aAAaA,MAAMU,EAAE,KAAK,EAAA,aACjC;IAErB;AACA,UAAMC,cAAc,MAAMP,OAAOR,SAASC,MAAAA;AAC1CE,UAAMa,KAAI,GAAID,WAAAA;EAClB;AAEA,SAAO;OAAIT;OAAcH;;AAC7B;AAtBsBH;","names":["getTools","wallet","plugins","tools","chain","getChain","coreTools","getCoreTools","plugin","supportsChain","console","warn","name","type","id","pluginTools","push"]}